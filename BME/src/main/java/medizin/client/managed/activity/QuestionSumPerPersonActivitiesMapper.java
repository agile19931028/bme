// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package medizin.client.managed.activity;

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.place.shared.PlaceController;
import com.google.gwt.requestfactory.shared.EntityProxyId;
import com.google.gwt.requestfactory.shared.RequestContext;
import medizin.client.managed.request.ApplicationRequestFactory;
import medizin.client.managed.request.AssesmentProxy;
import medizin.client.managed.request.PersonProxy;
import medizin.client.managed.request.QuestionEventProxy;
import medizin.client.managed.request.QuestionSumPerPersonProxy;
import medizin.client.managed.request.QuestionSumPerPersonRequest;
import medizin.client.managed.ui.QuestionSumPerPersonDetailsView;
import medizin.client.managed.ui.QuestionSumPerPersonEditView;
import medizin.client.managed.ui.QuestionSumPerPersonListView;
import medizin.client.managed.ui.QuestionSumPerPersonMobileDetailsView;
import medizin.client.managed.ui.QuestionSumPerPersonMobileEditView;
import medizin.client.scaffold.ScaffoldApp;
import medizin.client.scaffold.place.CreateAndEditProxy;
import medizin.client.scaffold.place.FindAndEditProxy;
import medizin.client.scaffold.place.ProxyPlace;

public class QuestionSumPerPersonActivitiesMapper {

    private final ApplicationRequestFactory requests;

    private final PlaceController placeController;

    public QuestionSumPerPersonActivitiesMapper(ApplicationRequestFactory requests, PlaceController placeController) {
        this.requests = requests;
        this.placeController = placeController;
    }

    public Activity getActivity(ProxyPlace place) {
        switch(place.getOperation()) {
            case DETAILS:
                return new QuestionSumPerPersonDetailsActivity((EntityProxyId<QuestionSumPerPersonProxy>) place.getProxyId(), requests, placeController, ScaffoldApp.isMobile() ? QuestionSumPerPersonMobileDetailsView.instance() : QuestionSumPerPersonDetailsView.instance());
            case EDIT:
                return makeEditActivity(place);
            case CREATE:
                return makeCreateActivity();
        }
        throw new IllegalArgumentException("Unknown operation " + place.getOperation());
    }

    @SuppressWarnings("unchecked")
    private EntityProxyId<medizin.client.managed.request.QuestionSumPerPersonProxy> coerceId(ProxyPlace place) {
        return (EntityProxyId<QuestionSumPerPersonProxy>) place.getProxyId();
    }

    private Activity makeCreateActivity() {
        QuestionSumPerPersonEditView.instance().setCreating(true);
        final QuestionSumPerPersonRequest request = requests.questionSumPerPersonRequest();
        Activity activity = new CreateAndEditProxy<QuestionSumPerPersonProxy>(QuestionSumPerPersonProxy.class, request, ScaffoldApp.isMobile() ? QuestionSumPerPersonMobileEditView.instance() : QuestionSumPerPersonEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(QuestionSumPerPersonProxy proxy) {
                request.persist().using(proxy);
                return request;
            }
        };
        return new QuestionSumPerPersonEditActivityWrapper(requests, ScaffoldApp.isMobile() ? QuestionSumPerPersonMobileEditView.instance() : QuestionSumPerPersonEditView.instance(), activity, null);
    }

    private Activity makeEditActivity(ProxyPlace place) {
        QuestionSumPerPersonEditView.instance().setCreating(false);
        EntityProxyId<QuestionSumPerPersonProxy> proxyId = coerceId(place);
        Activity activity = new FindAndEditProxy<QuestionSumPerPersonProxy>(proxyId, requests, ScaffoldApp.isMobile() ? QuestionSumPerPersonMobileEditView.instance() : QuestionSumPerPersonEditView.instance(), placeController) {

            @Override
            protected RequestContext createSaveRequest(QuestionSumPerPersonProxy proxy) {
                QuestionSumPerPersonRequest request = requests.questionSumPerPersonRequest();
                request.persist().using(proxy);
                return request;
            }
        };
        return new QuestionSumPerPersonEditActivityWrapper(requests, ScaffoldApp.isMobile() ? QuestionSumPerPersonMobileEditView.instance() : QuestionSumPerPersonEditView.instance(), activity, proxyId);
    }
}
