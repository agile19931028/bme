// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package medizin.client.managed.activity;

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.requestfactory.shared.EntityProxyId;
import com.google.gwt.requestfactory.shared.Receiver;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import medizin.client.managed.activity.QuestionSumPerPersonEditActivityWrapper.View;
import medizin.client.managed.request.ApplicationRequestFactory;
import medizin.client.managed.request.AssesmentProxy;
import medizin.client.managed.request.PersonProxy;
import medizin.client.managed.request.QuestionEventProxy;
import medizin.client.managed.request.QuestionSumPerPersonProxy;
import medizin.client.scaffold.activity.IsScaffoldMobileActivity;
import medizin.client.scaffold.place.ProxyEditView;
import medizin.client.scaffold.place.ProxyListPlace;
import medizin.client.scaffold.place.ProxyPlace;

public abstract class QuestionSumPerPersonEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setResponsiblePersonPickerValues(Collections.<PersonProxy>emptyList());
        requests.personRequest().findPersonEntries(0, 50).with(medizin.client.managed.ui.PersonProxyRenderer.instance().getPaths()).fire(new Receiver<List<PersonProxy>>() {

            public void onSuccess(List<PersonProxy> response) {
                List<PersonProxy> values = new ArrayList<PersonProxy>();
                values.add(null);
                values.addAll(response);
                view.setResponsiblePersonPickerValues(values);
            }
        });
        view.setQuestionEventPickerValues(Collections.<QuestionEventProxy>emptyList());
        requests.questionEventRequest().findQuestionEventEntries(0, 50).with(medizin.client.managed.ui.QuestionEventProxyRenderer.instance().getPaths()).fire(new Receiver<List<QuestionEventProxy>>() {

            public void onSuccess(List<QuestionEventProxy> response) {
                List<QuestionEventProxy> values = new ArrayList<QuestionEventProxy>();
                values.add(null);
                values.addAll(response);
                view.setQuestionEventPickerValues(values);
            }
        });
        view.setAssesmentPickerValues(Collections.<AssesmentProxy>emptyList());
        requests.assesmentRequest().findAssesmentEntries(0, 50).with(medizin.client.managed.ui.AssesmentProxyRenderer.instance().getPaths()).fire(new Receiver<List<AssesmentProxy>>() {

            public void onSuccess(List<AssesmentProxy> response) {
                List<AssesmentProxy> values = new ArrayList<AssesmentProxy>();
                values.add(null);
                values.addAll(response);
                view.setAssesmentPickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }

    public interface View_Roo_Gwt<V extends medizin.client.scaffold.place.ProxyEditView<medizin.client.managed.request.QuestionSumPerPersonProxy, V>> extends ProxyEditView<QuestionSumPerPersonProxy, V> {

        void setResponsiblePersonPickerValues(Collection<PersonProxy> values);

        void setQuestionEventPickerValues(Collection<QuestionEventProxy> values);

        void setAssesmentPickerValues(Collection<AssesmentProxy> values);
    }
}
