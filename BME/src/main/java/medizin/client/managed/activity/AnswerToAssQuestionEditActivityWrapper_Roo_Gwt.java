// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package medizin.client.managed.activity;

import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.requestfactory.shared.EntityProxyId;
import com.google.gwt.requestfactory.shared.Receiver;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import medizin.client.managed.activity.AnswerToAssQuestionEditActivityWrapper.View;
import medizin.client.managed.request.AnswerProxy;
import medizin.client.managed.request.AnswerToAssQuestionProxy;
import medizin.client.managed.request.ApplicationRequestFactory;
import medizin.client.managed.request.AssesmentQuestionProxy;
import medizin.client.scaffold.activity.IsScaffoldMobileActivity;
import medizin.client.scaffold.place.ProxyEditView;
import medizin.client.scaffold.place.ProxyListPlace;
import medizin.client.scaffold.place.ProxyPlace;

public abstract class AnswerToAssQuestionEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setAnswersPickerValues(Collections.<AnswerProxy>emptyList());
        requests.answerRequest().findAnswerEntries(0, 50).with(medizin.client.managed.ui.AnswerProxyRenderer.instance().getPaths()).fire(new Receiver<List<AnswerProxy>>() {

            public void onSuccess(List<AnswerProxy> response) {
                List<AnswerProxy> values = new ArrayList<AnswerProxy>();
                values.add(null);
                values.addAll(response);
                view.setAnswersPickerValues(values);
            }
        });
        view.setAssesmentQuestionPickerValues(Collections.<AssesmentQuestionProxy>emptyList());
        requests.assesmentQuestionRequest().findAssesmentQuestionEntries(0, 50).with(medizin.client.managed.ui.AssesmentQuestionProxyRenderer.instance().getPaths()).fire(new Receiver<List<AssesmentQuestionProxy>>() {

            public void onSuccess(List<AssesmentQuestionProxy> response) {
                List<AssesmentQuestionProxy> values = new ArrayList<AssesmentQuestionProxy>();
                values.add(null);
                values.addAll(response);
                view.setAssesmentQuestionPickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }

    public interface View_Roo_Gwt<V extends medizin.client.scaffold.place.ProxyEditView<medizin.client.managed.request.AnswerToAssQuestionProxy, V>> extends ProxyEditView<AnswerToAssQuestionProxy, V> {

        void setAnswersPickerValues(Collection<AnswerProxy> values);

        void setAssesmentQuestionPickerValues(Collection<AssesmentQuestionProxy> values);
    }
}
